<Application x:Class="DataMartBuilder.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DataMartBuilder"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Style TargetType="Window">
                <Setter Property="Background" Value="#2E2E2E"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="TabControl">
                <Setter Property="Background" Value="#2E2E2E"/>
                <Setter Property="BorderBrush" Value="#5A5A5A"/>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#5A5A5A"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Border x:Name="border" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter ContentSource="Header" 
                                                      Margin="2" 
                                                      VerticalAlignment="Center" 
                                                      HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#007ACC"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#5A5A5A"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button">
                <Setter Property="Background" Value="#007ACC"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#005A9E"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="FontSize" Value="14"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#005A9E"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#003F7F"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Background" Value="#3C3C3C"/>
                <Setter Property="BorderBrush" Value="#5A5A5A"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="ListBox">
                <Setter Property="Background" Value="#3C3C3C"/>
                <Setter Property="BorderBrush" Value="#5A5A5A"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="Expander">
                <Setter Property="Background" Value="#3C3C3C"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="10"/>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Background" Value="#3C3C3C"/>
                <Setter Property="BorderBrush" Value="#5A5A5A"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="ListBoxItem" x:Key="DarkListBoxItemStyle">
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#555555"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ComboBox" x:Key="DarkComboBoxStyle">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                                  Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                  ClickMode="Press">
                                    <ContentPresenter />
                                </ToggleButton>
                                <Popup Name="Popup" Placement="Bottom" AllowsTransparency="True" Focusable="False" 
                           IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}">
                                        <Border x:Name="DropDownBorder" Background="#333333" BorderThickness="1" BorderBrush="Gray">
                                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>
